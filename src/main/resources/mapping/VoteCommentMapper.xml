<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ixuhan.xdwy.data.VoteCommentMapper">
  <resultMap id="BaseResultMap" type="cn.ixuhan.xdwy.model.VoteComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="vote_id" jdbcType="INTEGER" property="voteId" />
    <result column="user_img" jdbcType="VARCHAR" property="userImg" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="toptop" jdbcType="INTEGER" property="toptop" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, vote_id, user_img, openid, nickname, content, create_time, toptop, valid
  </sql>
  <select id="selectByExample" parameterType="cn.ixuhan.xdwy.model.VoteCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vote_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vote_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vote_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ixuhan.xdwy.model.VoteCommentExample">
    delete from vote_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ixuhan.xdwy.model.VoteComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vote_comment (vote_id, user_img, openid, 
      nickname, content,  valid)
    values (#{voteId,jdbcType=INTEGER}, #{userImg,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},   #{nickname,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},#{valid,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.ixuhan.xdwy.model.VoteComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vote_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        vote_id,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="toptop != null">
        toptop,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toptop != null">
        #{toptop,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ixuhan.xdwy.model.VoteCommentExample" resultType="java.lang.Long">
    select count(*) from vote_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vote_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.voteId != null">
        vote_id = #{record.voteId,jdbcType=INTEGER},
      </if>
      <if test="record.userImg != null">
        user_img = #{record.userImg,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toptop != null">
        toptop = #{record.toptop,jdbcType=INTEGER},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vote_comment
    set id = #{record.id,jdbcType=INTEGER},
      vote_id = #{record.voteId,jdbcType=INTEGER},
      user_img = #{record.userImg,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      toptop = #{record.toptop,jdbcType=INTEGER},
      valid = #{record.valid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ixuhan.xdwy.model.VoteComment">
    update vote_comment
    <set>
      <if test="voteId != null">
        vote_id = #{voteId,jdbcType=INTEGER},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toptop != null">
        toptop = #{toptop,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ixuhan.xdwy.model.VoteComment">
    update vote_comment
    set vote_id = #{voteId,jdbcType=INTEGER},
      user_img = #{userImg,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      toptop = #{toptop,jdbcType=INTEGER},
      valid = #{valid,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectCommentWithTopCountAndHadTop" resultType="java.util.HashMap">
    SELECT vc.* ,IFNULL(tmp1.top_count,0)
    AS top_count, IFNULL(tmp2.had_top,0)
    AS had_top
    FROM vote_comment vc
    LEFT JOIN (SELECT comm_id AS tmp1_cid,COUNT(1) AS top_count FROM vcomment_good GROUP BY comm_id) AS tmp1    ON vc.`id` = tmp1.tmp1_cid
    LEFT JOIN (SELECT comm_id AS tmp2_cid,COUNT(1) AS had_top FROM vcomment_good WHERE openid = #{openid,jdbcType=VARCHAR} GROUP BY comm_id )AS tmp2 ON vc.`id` = tmp2.tmp2_cid
    WHERE vc.vote_id = #{voteId,jdbcType=INTEGER}
    ORDER BY tmp1.top_count DESC , vc.create_time DESC

  </select>
</mapper>